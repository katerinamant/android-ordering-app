<diagram program="umletino" version="15.1"><zoom_level>6</zoom_level><help_text>Space for diagram noteseld:  &lt;TablFiTextFieldista</help_text><element><id>UMLClass</id><coordinates><x>540</x><y>1014</y><w>150</w><h>84</h></coordinates><panel_attributes>Manager Action Activity
--
- brand: String
--
+ onCreate(savedInstanceState: Bundle)
+ editCinfo()
+ manageEmployees()
+ manage_tables()
+ edit_menu()
+ revenue_breakdown()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>720</x><y>708</y><w>150</w><h>252</h></coordinates><panel_attributes>EditInfo Activity
--
- presenter: EditInfoPresenter
- relativeLayout: RelativeLayout
- confirm_changes-popup: PopupWindow
- addressField: EditText
- phoneNumberFIeld: EditText
- ssnField: EditText
- brandField: EditText 
- finishButton: Button 
- finish_button_enabled: boolean 
- text_changed: boolean 
- prev_address: String 
- prev_phone_number: String 
- prev_ssn: String 
-prev_brand: String 
- address: String
- phoneNumber: String 
- ssn: String 
- brand: String 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ validFinish()
+ successfulFinish(cafe: Cafeteria) 
+ showToast(msg: String)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1326</x><y>822</y><w>126</w><h>318</h></coordinates><panel_attributes>ManageTables Activity
--
- viewModel: ManageTablesViewModel
- brand: String 
- relativeLayout: RelativeLayout 
- add_table_popup: PopupWindow
- addTableNumberField: EditText 
- addUniqueField: EditText 
- addTableButton: Button 
- add_table_enabled: boolean 
- selected_table: Table
- edit_table_popup: PopupWindow
- prev_table_number: int 
- prev_unique_id: String  
- editTableNumberField: EditText 
- editUniqueIdField: EditText 
- confirmEditButton: Button
- confirm_edit_enabled: boolean 
- text_changed_ boolean 
- newTableNumber: String 
- newTableUniqueId: String 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ successfulNewTable()
+ successfulEdit()
+ successfulDelete()
+ showError(title: String, msg: String) 
+ showToast(msg: String) 
+ editTable(t: Table) 
+ deleteTable(t: Table) 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1716</x><y>978</y><w>150</w><h>228</h></coordinates><panel_attributes>EditMenu Activity
--
- viewModel: EditViewModel
- brand: String 
- relativeLayout: RelativeLayout
- add_category_popup: PopupWIndow
- addCategoryNameField: EditText 
- addCategoryDescriptionField: EditText
- addCategoryButton: Button 
- add_category_enabled: boolean
- newCategoryName: String 
- newCategoryDescription: String 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ onRestart() 
+ successfulNewCategory() 
+ showToast(msg: String) 
+ showError(title: String, msg: String)
+ viewCategory(c: ProductCategory)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1950</x><y>1290</y><w>126</w><h>36</h></coordinates><panel_attributes>InfoInput View
--
+ successfulFinish(cafe: Cafeteria) 
+ showToast(msg: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1524</x><y>1320</y><w>126</w><h>156</h></coordinates><panel_attributes>Manager SignUp Activity 
--
- usernameField: EditText
- passwordField: EditText
- continueButton: Button 
- continue_button_enabled: boolean
- username: String
- password: String
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ successfulContinue(newUser: User) 
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1086</x><y>1314</y><w>156</w><h>318</h></coordinates><panel_attributes>ManageEmployees Activity
--
- viewModel: ManageEmployeesViewModel
- brand: String 
- relativeLayout: RelativeLayout 
- add_employee_popup: PopupWIndow
- addUsernameField: EditText
- addPasswordField: EditText
- addEmployeeButton: Button 
- addEmployeeEnabled: boolean 
- selected_barista: Barista 
- edit_employee_popup: PopupWindow
- prev_username: String 
- prev_password: String 
- editUsernameField: EditText 
- editPasswordField: EditText 
- confirmEditButton: Button 
- confirm_edit_enabled: boolean 
- text_changed: boolean 
- newUsername: String 
- newPassword: String 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ successfulNewEmployee() 
+ successfulEdit()
+ successfulDelete()
+ showError(title: String, msg: String) 
+ showToast(msg: String) 
+ editEmployee(b: Barista) 
+ deleteEmployee(b: Barista) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>696</x><y>1338</y><w>144</w><h>168</h></coordinates><panel_attributes>Manager LogIn Activity
--
- usernameField: EditText
- passwordField: EditText
- loginButton: Button 
- login_button_enabled: boolean
- username: String 
- password: String 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ successfulLogIn(cafe: Cafeteria) 
+ showError(title: String, msg: String) 
+ showToast(msg: String)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>420</x><y>1140</y><w>138</w><h>222</h></coordinates><panel_attributes>Revenue Activity
--
- brand: String 
- yearField: EditText 
- monthField: EditText
- dayField: EditText 
- month_output: TextView
- day_output: TextView
- calculateButton: Button 
- calculate_button_enabled: boolean
- year: int 
- month: int 
- day: int 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ onCalculation(monthTotal: double,
 dayTotal: double) 
+ showError(title: String, msg: String) 
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>348</x><y>954</y><w>132</w><h>42</h></coordinates><panel_attributes>Manager Action VIew
--
+ successfulContinue(newUser: User)
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>480</x><y>1434</y><w>150</w><h>72</h></coordinates><panel_attributes>Manager LogIn Presenter
--
- view: ManagerLogInView
- users: ManagerDAO
--
+ ManagerLogInPresenter(view: 
 ManagerLogInView, users: ManagerDAO)
+ onLogin(loginButtonEnabled: boolean,
 username: String, password: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1308</x><y>1500</y><w>126</w><h>72</h></coordinates><panel_attributes>Interface
ManageEmployees View
--
+ successfulNewEmployee()
+ successfulEdit()
+ successfulDelete()
+ showError(title: String, msg: String) 
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1482</x><y>1638</y><w>132</w><h>48</h></coordinates><panel_attributes>Interface
Manager SignUp View
--
+ successfulContinue(newUser: User) 
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1716</x><y>1272</y><w>144</w><h>210</h></coordinates><panel_attributes>InfoInput Activity
--
- addressField: EditText
- phoneNumberField: EditText 
- ssnField: EditText 
- brand: EditText
- finishButton: Button 
- finish_button_enabled: boolean
- username: String 
- password: String 
- address: String 
- phoneNumber: String 
- ssn: String 
- brand: String 
--
+ onCreate(avedInstanceState: Bundle)
+ onClick(view: View) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ successfulFinish(cafe: Cafeteria)
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>240</x><y>1170</y><w>126</w><h>66</h></coordinates><panel_attributes>Interface
Revenue View
--
+ onCalculatation(monthTotal: 
 double, DayTotal: double)
+ showError(title: String, msg: String) 
+ showToast(msg: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>444</x><y>816</y><w>126</w><h>48</h></coordinates><panel_attributes>EditInfo View
--
validFinish()
successfulFinish(cafe: Cafeteria) 
showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1344</x><y>660</y><w>132</w><h>78</h></coordinates><panel_attributes>Interface
ManageTables View
--
+ successfulNewTable() 
+ successfulEdit()
+ successfulDeleet()
+ showError(title: String, msg: String)
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1974</x><y>1164</y><w>126</w><h>48</h></coordinates><panel_attributes>EditMenu View
--
successfulNewCategory()
showToast(s: String)
showError(s: String, s1: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>438</x><y>990</y><w>114</w><h>54</h></coordinates><panel_attributes>lt=&lt;&lt;.
extends</panel_attributes><additional_attributes>10;10;10;70;170;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1236</x><y>1530</y><w>84</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
extends</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1554</x><y>1470</y><w>42</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;.
extends</panel_attributes><additional_attributes>10;280;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1854</x><y>1302</y><w>108</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
extends</panel_attributes><additional_attributes>160;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>1200</y><w>72</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;20;100;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1374</x><y>732</y><w>42</w><h>102</h></coordinates><panel_attributes>lt=&lt;&lt;.
extends</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>Relation</id><coordinates><x>1860</x><y>1170</y><w>126</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
extends</panel_attributes><additional_attributes>190;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>564</x><y>822</y><w>168</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
extends</panel_attributes><additional_attributes>10;20;260;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>690</x><y>1596</y><w>126</w><h>60</h></coordinates><panel_attributes>Interface
ManagerLogin View
--
+ successfulLogIn(cafe: Cafeteria)
+ showError(title: String, msg: String);
+ showToast(msg: String);</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>882</x><y>1590</y><w>168</w><h>222</h></coordinates><panel_attributes>ManageEmployees Presenter
--
- baristaDAO: BaristaDAO 
- cafeteriaDAO: CafeteriaDAO 
- view: ManageemployeesView
- cafe_brand: String 
- employeeResults: List&lt;Barista&gt; 
--
+ setBaristaDAO(baristaDAO: BaristaDAO)
+ getBaristaDAO(): BaristaDAO {query} 
+ setCafeteriaDAO(cafeteriaDAO: CafeteriaDAO)
+ getCafeteriaDAO(): CafeteriaDAO {query}
+ setBrand(brand: String) 
+ getBrand(): String {query} 
+ setView(view: ManageEmployeesView)
+ findAll(brand: String) 
+ getEmployeeResults(): List&lt;Barista&gt; {q} 
+ onAddNewEmployee(add_employee_enabled: 
 boolean, newUsername: String, newPassword: 
 String) 
+ onEditEmployee(barista: Barista, confirm_edit_
enabled: boolean, text_changed: boolean, 
prev_username: String, prev_password: String, 
username: String, password: String)
+ onDeleteEmployees(barista: Barista) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1944</x><y>1356</y><w>156</w><h>120</h></coordinates><panel_attributes>InfoInput Presenter
--
- view: InfoInputView
- users: ManagerDAO
- cafes: CafeteriaDAO 
- revenue: MonthlyRevenueDAO
--
+ InfoInputPresenter(view: InfoInputView,
 users: ManagerDAO, cafes: CafeteriaDAO,
 revenue: MonthlyRevenueDAO) 
+ onFinish(finish_enabled: boolean, username: 
 String, password: String, address: String, 
 phoneNumber: String, ssn: String, brand: 
 String) 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>150</x><y>1272</y><w>144</w><h>96</h></coordinates><panel_attributes>Revenue Presenter
--
- view: ManagerRevenueVIew
- revenue: MonthlyRevenueDAO
- brand: String 
--
+ ManagerRevenuePresenter(view: 
ManagerRevenueView, brand: String, 
revenue:MonthlyRevenueDAO)
+ onCalculate(calculate_button_enabled:
 boolean, year: int, month: int, day: int) 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1716</x><y>858</y><w>144</w><h>60</h></coordinates><panel_attributes>EditMenu ViewModel
--
- presenter: EditMenuPresenter
--
+ EditMenuViewModel()
+ getPresenter(): EditMenuPresenter {q}
+ onCleared()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1758</x><y>600</y><w>126</w><h>210</h></coordinates><panel_attributes>ManageTables Presenter
--
- tableDAO: TableDAO 
- cafeteriaDAO: CafeteriaDAO 
- view: ManageTablesView
- cafe_brand: String
- tableResults: List&lt;Table&gt; 
--
+ setTableDAO(tableDAO: TableDAO) 
+ getTableDAO(): TableDAO {query} 
+ setCafeteriaDAO(cafe: CafeteriaDAO)
+ getCatefetriaDAO(): CAfeteriaDAO {q}
+ setBrand(brand: String) 
+ getBrand(): String {query} 
+ setView(view: ManageTablesView) 
+ findAll(brand: String) 
+ getTableResults(): List&lt;Table&gt; {q} 
+ onAddNewTable(add_table_enabled: 
 boolean, tableNumber: String, uID: String) 
+ onEditTable(table: Table, confirm_edit_en: 
boolean, text_changed: boolean, prevTN: 
int, prev_unique_id: String, tableNumber_s: 
String, uniqueID: string) 
+ onDeleteTable(table:Table) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1686</x><y>1566</y><w>156</w><h>54</h></coordinates><panel_attributes>Manager SignUp Presenter
--
+ ManagerSignUpPresenter(view: 
 ManagerSignUpView, users: ManagerDAO)
+ onContinue(button_enabled: boolean, 
 username: String, password: String) 


</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>378</x><y>528</y><w>174</w><h>198</h></coordinates><panel_attributes>EditInfo Presenter
--
- view: EditInfoView
- cafeteriaDAO: CafeteriaDAO
- revenueDAO: MonthlyRevenueDAO 
- baristaDAO: BaristaDAO 
- tableDAO: TableDAO
- menuDAO: MenuDAO 
- cafe: Cafeteria
--
+ EditInfoPresenter(view: EditInfoView,
 brand: String, cafeteriaDAO: CafeteriaDAO,
 revenueDAO: MonthlyRevenueDAO, 
 baristaDAO: BaristaDAO, tableDAO: TableDAO,
 menuDAO: MenuDAO) 
+ getCafe(): Cafeteria {query} 
+ onFinish(finish_enabled: boolean, text_changed: 
 boolean, prev_brand: String, phoneNum: String, 
 ssn: String, brand: String) 
+ onConfirmChanges(prev_address: String, 
 prev_phone_number: String, prev_ssn: String, 
prev_brand: String, address: String, phone_num: 
 String, ssn: String, brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>276</x><y>1032</y><w>120</w><h>96</h></coordinates><panel_attributes>Manager Action Presenter
--
- view: ManagerActionsView
--
+ ManagerActionsPresenter( view: 
 ManagerActionsView)
+ onEditCinfo()
+ onManageEmployees()
+ onManageTables()
+ onEditMenu()
+ onRevenueBreakdown()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1308</x><y>1332</y><w>156</w><h>120</h></coordinates><panel_attributes>ManageEmployees 
RecyclerViewAdapter
--
- List&lt;Barista&gt; mValues
- listener: ItemSelectionListener
--
+ EmployeeRecyclerViewAdapter(items: 
List&lt;Barista&gt;, listener: ItemSelectionListener)
+ onCreateViewHolder(parent: VIewGroup, 
viewType: int)
+ onBindVIewHolder(holder: ViewHolder, 
 position: int) 
+ onClick(v: View) 
+ getItemCount(): int {query} 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>882</x><y>1440</y><w>144</w><h>66</h></coordinates><panel_attributes>ManageEmployees ViewModel
--
- presenter: ManageemployeesPresenter
--
+ ManagerEmployeesViewModel()
+ getPresenter(): 
ManageEmployeesPresenter {query}
+ onCleared()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1512</x><y>864</y><w>162</w><h>60</h></coordinates><panel_attributes>ManageTables ViewModel
--
- presenter: ManageTablesPresenters
--
+ manageTablesViewModel()
+ getPresenter(): ManageTablesPresenter
+ onCleared()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1536</x><y>612</y><w>156</w><h>108</h></coordinates><panel_attributes>ManageTables RecyclerViewAdapter 
--
- mValues: List&lt;Table&gt;
- listener: ItemSelectionListener
--
+ TableRecyclerViewAdapter(items: 
 List&lt;Table&gt;, listener: ItemSelectionListener
+ onCreateViewHolder(parent: ViewGroup, 
 viewType: int) 
+ onBindViewHolder(holder: ViewHolder, 
 position: int)
+ onClick(v: View) 
+ getItemCount(): int {query} </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>390</x><y>1068</y><w>162</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
is used in</panel_attributes><additional_attributes>250;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1626</x><y>1470</y><w>72</w><h>132</h></coordinates><panel_attributes>lt=&lt;&lt;.
is used in</panel_attributes><additional_attributes>10;10;10;200;100;200</additional_attributes></element><element><id>Relation</id><coordinates><x>1446</x><y>894</y><w>78</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-
m1=1 
m2=1
is used in</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1782</x><y>912</y><w>48</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;110;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1446</x><y>672</y><w>108</w><h>174</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>150;10;90;10;90;270;10;270</additional_attributes></element><element><id>Relation</id><coordinates><x>1626</x><y>750</y><w>144</w><h>126</h></coordinates><panel_attributes>lt=&lt;&lt;-
m1=1 
m2=1
is used in</panel_attributes><additional_attributes>10;190;10;20;220;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>930</x><y>606</y><w>144</w><h>456</h></coordinates><panel_attributes>Edit Categories Activity
--
- viewModel: EditCategoriesViewModel
- brand: String 
- category: String 
- relativeLayout: RelativeLayout
- prev_category_name: String 
- prev_category_desc: String 
- edit_category_popup: PopupWindow
- editCategoryNameField: EditText
- editCategoryDescField: EditText 
- confirmEditButton: Button 
- confirm_edit_enabled: boolean 
- text_changed: boolean 
- newCategoryName: String 
- newCategoryDesc: String 
- delete_category_popup: PopupWindow
- add_product_popup: PopupWindow
- addProductNameField: EditText
- addProductPriceField: EditText 
- setProductAvailabilitySwitch: Switch
- add_product_switch_status: boolean 
- addProductButton: Button 
- add_product_enabled: boolean 
- newProductName: String 
- newProductPrice: String
- selected_product: Product 
- edit_product_popup: PopupWindow
- prev_product_name: String 
- prev_product_price: double 
- editProductNameField: EditText 
- editProductPriceField: EditText 
--
+ onCreate(savedInstanceState: Bundle)
+ onClick(v: View) 
+ onCheckedChanged(buttonView: 
CompoundButton, inChecked: boolean) 
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ successfulEditCategry()
+ successfulDeleteCategory()
+ successfulNewProduct()
+ successfulEditProduct()
+ successfulDeleteProduct()
+ showError(title: String, msg: String)
+ showToast(msg: String)
+ editProduct(p: Product)
+ deleteProduct(p: Product)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1068</x><y>810</y><w>84</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1140</x><y>774</y><w>126</w><h>90</h></coordinates><panel_attributes>Interface 
EditCategories View 
--
+ successfulEditCategory()
+ successfulDeleteCategory()
+ successfulNewProduct()
+ successfulEditProduct()
+ void successfulDeleteProduct();
+ void showError(String title, String msg);
+ void showToast(String msg);</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>942</x><y>498</y><w>126</w><h>66</h></coordinates><panel_attributes>EditCategories ViewModel
--
- presenter: EditCategoriesPresenter
--
+ EditCategoriesVIewModel()
+ getPresenter(): 
 EditCategoriesPresenter {query}
+ onCleared()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1122</x><y>414</y><w>186</w><h>300</h></coordinates><panel_attributes>EditCategories Presenter
--
- view: EditCategoriesVIew
- menuDAO: MenuDAO
- cafeteriaDAO: CafeteriaDAO
- cafe_brand: String 
- category: ProductCategory
- cafe: Cafeteria 
- productResults: List&lt;Products&gt;
--
+ setMenuDAO(menuDAO: MenuDAO)
+ getMenuDAO(): MenuDAO {query}
+ setCafeteriaDAO(cafeteriaDAO: 
 CafeteriaDAO) 
+ getCafeteriaDAO(): CafeteriaDAO {q}
+ setView(view: EditCategoriesView, 
 category_name: String, cafe_brand: String)
+ setBrand(brand: String) 
+ getBrand(): String {query}
+ getCategoryName(): String {query}
+ getCategoryDesc(): String {query}
+ findAllProducts() 
+ getProductResults(): List&lt;Product&gt; {q}
+ onEditCategory(confirm_edit_enabled: boolean,
 text_changed: boolean, prev_name: String,
prev_desc: String, name: String, desc: String
+ onDeleteCategory()
+ onAddProduct(addProductEnabled: boolean, name: 
 String, price_string: String, availability: boolean)
+ onChangeAvailabilityOfProduct(product: Product)
+ onEditProduct(product:Product, confirm_edit_enabled:
 boolean, text_changed: boolean,  prev_name: String,
prev_price: double, name: String, price_string: String)
+ onDeleteProduct(product: Product) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>702</x><y>534</y><w>150</w><h>120</h></coordinates><panel_attributes>MenuProduct RecyclerView Adapter
--
- mValues: List&lt;Product&gt;
- listener: ItemSelectionListener
--
+ MenuProductRecyclerViewAdapter(
 items: List&lt;Product&gt;, listener: 
ItemSelectionListener
+ onCreateViewHolder(parent: ViewGroup,
 viewType: int): ViewHolder {query} 
+ onBindViewHolder(position: int, holder: 
 ViewHolder) 
+ onClick(v: View) 
+ getItemCount(): int {query}</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>996</x><y>558</y><w>48</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;.
is used in</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1062</x><y>534</y><w>72</w><h>30</h></coordinates><panel_attributes>lt=-&gt;&gt;
m1=1
m2=1
is used in</panel_attributes><additional_attributes>100;21;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>846</x><y>618</y><w>96</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;20;140;20</additional_attributes></element><element><id>Relation</id><coordinates><x>546</x><y>624</y><w>186</w><h>132</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=2 
is used in </panel_attributes><additional_attributes>290;190;120;190;120;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1968</x><y>1026</y><w>198</w><h>96</h></coordinates><panel_attributes>Category RecyclerView Adapter
--
- mValues: List&lt;ProductCategory&gt;
- listener: ItemSelectionListener 
--
+ CategoryRecyclerViewVIewAdapter(items: 
 List&lt;ProductCategory, listener: ItemSelectionListener)
+ onCreateviewHolder(parent: Viewgroup, viewType: int)
+ onBindViewHolder(holder: ViewHolder, position: int) 
+ onClick(v: View) 
+ getItemCount(): int {query}
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1980</x><y>822</y><w>174</w><h>174</h></coordinates><panel_attributes>EditMenu Presenter
--
- menuDAO: MenuDAO
- cafeteriaDAO: CafeteriaDAO
- view: EditMenuview
- cafe_brand: String
- categoryResults: List&lt;ProductCategory&gt;
--
+ setMenuDAO(menuDAO: MenuDAO)
+ getMenuDAO(): MenuDAO {query} 
+ setCafeteriaDAO(cafeteriaDAO: 
 CafeteriaDAO) 
+ getCafeteriaDAO(): CafeteriaDAO {query}
+ setBrand(brand: String) 
+ getBrand(): String {query} 
+ setView(view: EditMenuView) 
+ findAllCategories(brand: String) 
+ getProductCategory(): List&lt;ProductCategory&gt; 
+ onAddCategory(addCategoryEnabled: boolean,
 name: String, description: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1860</x><y>1068</y><w>120</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>180;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1854</x><y>894</y><w>138</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-
m1=1 
m2=1
is used in</panel_attributes><additional_attributes>10;20;210;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1854</x><y>1410</y><w>102</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-
m1=1 
m2=1
is used in</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>756</x><y>1500</y><w>42</w><h>108</h></coordinates><panel_attributes>lt=&lt;&lt;-
extends</panel_attributes><additional_attributes>10;160;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>624</x><y>1452</y><w>84</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-
m1=1 
m2=1 
is used in</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>948</x><y>1500</y><w>48</w><h>102</h></coordinates><panel_attributes>lt=&lt;&lt;-
m1=1 
m2=1
is used in</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>Relation</id><coordinates><x>1020</x><y>1464</y><w>78</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
is used in</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1236</x><y>1362</y><w>84</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>120;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>288</x><y>1296</y><w>144</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-
m1=1 
m2=1
is used in</panel_attributes><additional_attributes>220;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1578</x><y>1272</y><w>150</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to </panel_attributes><additional_attributes>230;20;10;20;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>462</x><y>1092</y><w>114</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to (through 
RevenueBreakDown)</panel_attributes><additional_attributes>10;80;10;50;170;50;170;10</additional_attributes></element><element><id>Relation</id><coordinates><x>576</x><y>912</y><w>156</w><h>114</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to (through edit indo)</panel_attributes><additional_attributes>240;20;80;20;80;170</additional_attributes></element><element><id>Relation</id><coordinates><x>684</x><y>1026</y><w>654</w><h>72</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to (through ManageTables)</panel_attributes><additional_attributes>1070;10;710;10;710;100;330;100;330;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>684</x><y>1056</y><w>1044</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to (through EditMenu) </panel_attributes><additional_attributes>1720;180;280;180;280;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>684</x><y>1086</y><w>1116</w><h>198</h></coordinates><panel_attributes>lt=&lt;&lt;-
results in </panel_attributes><additional_attributes>10;10;220;10;220;250;1840;250;1840;310</additional_attributes></element><element><id>Relation</id><coordinates><x>666</x><y>1092</y><w>432</w><h>312</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to (through 
ManageEmployees)</panel_attributes><additional_attributes>700;500;630;500;630;290;190;290;190;50;10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>612</x><y>1014</y><w>168</w><h>336</h></coordinates><panel_attributes>lt=&lt;&lt;-






























leads to</panel_attributes><additional_attributes>10;140;10;230;220;230;220;540</additional_attributes></element><element><id>Relation</id><coordinates><x>1194</x><y>708</y><w>48</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>2094</x><y>930</y><w>132</w><h>270</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>100;10;150;10;150;420;10;420</additional_attributes></element><element><id>Relation</id><coordinates><x>2070</x><y>1302</y><w>96</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>10;10;90;10;90;120;50;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1608</x><y>1614</y><w>174</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>260;10;260;100;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1044</x><y>1566</y><w>342</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>540;10;540;170;10;170</additional_attributes></element><element><id>Relation</id><coordinates><x>162</x><y>1206</y><w>90</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>20;110;20;20;130;20</additional_attributes></element><element><id>Relation</id><coordinates><x>552</x><y>1500</y><w>156</w><h>138</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>10;10;10;200;240;200</additional_attributes></element><element><id>Relation</id><coordinates><x>300</x><y>966</y><w>60</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>10;110;10;10;80;10</additional_attributes></element><element><id>Relation</id><coordinates><x>420</x><y>720</y><w>48</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1
m2=1
is used in</panel_attributes><additional_attributes>10;10;10;170;40;170</additional_attributes></element><element><id>UMLClass</id><coordinates><x>132</x><y>1632</y><w>162</w><h>144</h></coordinates><panel_attributes>RevenueDAOMemory
--
- revenues: HashMap&lt;Sring, Revenues&gt;
--
+ addCafeteria(brand: String)
+ containsCafeteria(brand: String) : 
 boolean {query}
+ updateCafeteria(old_brand: String, 
 new_brand: String)
+ getDay(brand: String, yean: int, month: 
int, day: int): double {query}
+ getMonthTotal(brand: TSirng, year: int, 
 month: int): double {query}
+ addToDay(brand: String, year: int, month: i
 int, day: int, amount: double)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>114</x><y>1440</y><w>186</w><h>132</h></coordinates><panel_attributes>Interface 
RevenueDAO
--
+ addCafeteria(brand: String)
+ containsCafeteria(brand: String) : 
 boolean {query}
+ updateCafeteria(old_brand: String, 
 new_brand: String)
+ getDay(brand: String, yean: int, month: 
int, day: int): double {query}
+ getMonthTotal(brand: TSirng, year: int, 
 month: int): double {query}
+ addToDay(brand: String, year: int, month: i
 int, day: int, amount: double)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>198</x><y>1566</y><w>60</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>180</x><y>1362</y><w>48</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;10;10;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1332</x><y>1782</y><w>132</w><h>84</h></coordinates><panel_attributes>Interface
CafeteriaDAO
--
+ find(brand: String)
+ exists(brand: String) 
+ save(cafe:Cafeteria)
+ delete(cafe: Cafeteria)
+ updateCafeteria(old_brand: String,
 new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1548</x><y>1758</y><w>168</w><h>114</h></coordinates><panel_attributes>CafeteriaDAOMemory
--
- cafes: List&lt;Cafeteria&gt;
- brand_to_cafe:&lt;HashMap&lt;String, Cafeteria&gt;
--
+ find(brand: String)
+ exists(brand: String) 
+ save(cafe:Cafeteria)
+ delete(cafe: Cafeteria)
+ updateCafeteria(old_brand: String,
 new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1458</x><y>1836</y><w>102</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;20;150;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1440</x><y>1470</y><w>558</w><h>324</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>910;10;910;410;10;410;10;520</additional_attributes></element><element><id>Relation</id><coordinates><x>1038</x><y>1680</y><w>396</w><h>114</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in </panel_attributes><additional_attributes>10;20;640;20;640;170</additional_attributes></element><element><id>UMLClass</id><coordinates><x>762</x><y>1968</y><w>150</w><h>66</h></coordinates><panel_attributes>Interface
ManagerDAO
--
+ find(username: String, password: String) 
+ exists(username: String) 
+ save(user: User) 
+ delete(user; User)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1008</x><y>1974</y><w>180</w><h>78</h></coordinates><panel_attributes>ManagerDAOMemory
--
- users: List&lt;User&gt;
- username_to_manager: HashMap&lt;String, User&gt;
--
+ find(username: String, password: String) 
+ exists(username: String) 
+ save(user: User) 
+ delete(user; User)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>906</x><y>1992</y><w>114</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implement</panel_attributes><additional_attributes>10;20;170;20</additional_attributes></element><element><id>Relation</id><coordinates><x>504</x><y>1500</y><w>318</w><h>480</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in </panel_attributes><additional_attributes>10;10;10;330;510;330;510;780</additional_attributes></element><element><id>Relation</id><coordinates><x>90</x><y>708</y><w>300</w><h>780</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>480;10;410;10;410;340;20;340;10;1280;40;1280</additional_attributes></element><element><id>UMLClass</id><coordinates><x>576</x><y>246</y><w>204</w><h>210</h></coordinates><panel_attributes>MenuDAOMemory
--
_cafeteria_to_products: 
HashMap&lt;String, ArrayList&lt;products&gt;&gt;
- cafetria_to_categories:
 Hashmap&lt;String, ArrayList&lt;ProductCategory&gt;&gt;
--
+ productExists(cafeteria_brand: String,
 product_name)
+ saveProduct(product: Product)
+ deleteProduct(product: Product)
+findProduct(cafeteria_brand: String, 
product_name: String)
+ findAllProducts(cafeteria_brand:String, 
 category: ProductCategory)
+ categoryExists(cafeteria_brand: String, 
 category_name: String)  
+ saveCategory(category: ProductCategory)
+ deleteCategory(category: ProductCategory) 
+ findCategory(cafeteria_brand: String, 
category_name: String) 
+findAllCategories(cafeteria_brand): 
 List&lt;ProductCategory&gt; {query}
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>858</x><y>246</y><w>204</w><h>180</h></coordinates><panel_attributes>Interface 
MenuDAO
--
+ productExists(cafeteria_brand: String,
 product_name)
+ saveProduct(product: Product)
+ deleteProduct(product: Product)
+findProduct(cafeteria_brand: String, 
product_name: String)
+ findAllProducts(cafeteria_brand:String, 
 category: ProductCategory)
+ categoryExists(cafeteria_brand: String, 
 category_name: String)  
+ saveCategory(category: ProductCategory)
+ deleteCategory(category: ProductCategory) 
+ findCategory(cafeteria_brand: String, 
category_name: String) 
+findAllCategories(cafeteria_brand): 
 List&lt;ProductCategory&gt; {query}
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>774</x><y>318</y><w>96</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
Implements</panel_attributes><additional_attributes>140;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>528</x><y>420</y><w>378</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;180;10;110;610;110;610;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1020</x><y>420</y><w>114</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>170;40;10;40;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1056</x><y>342</y><w>966</w><h>492</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>1590;800;1590;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>828</x><y>1470</y><w>1236</w><h>510</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>2030;10;2040;720;10;730;10;830</additional_attributes></element><element><id>Relation</id><coordinates><x>0</x><y>654</y><w>1392</w><h>1434</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>630;10;50;10;10;2370;2300;2360;2300;2020</additional_attributes></element><element><id>Relation</id><coordinates><x>1422</x><y>888</y><w>924</w><h>1188</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>1220;10;1520;10;1520;1950;10;1960;10;1630</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1686</x><y>156</y><w>162</w><h>108</h></coordinates><panel_attributes>Interface
BaristaDAO
--
+ find(username: String, password: String)
+ findAll(cafeteria_brand): List&lt;Barista&gt; {q}
+ exists(username: String): boolean {query}
+ save(barista: Barista) 
+ delete(barista: Barista) 
+ updateBarista(old_username: String,
 new_username: String) 
+ updatecafeteria(old_brand: String, 
 new_brand: String) 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1944</x><y>168</y><w>204</w><h>150</h></coordinates><panel_attributes>BaristaDAOMemory
--
- baristas: List&lt;barista&gt; 
-username_to_barista: HashMap&lt;String, Barista&gt; 
_ cafeteria_to_barista: HashMap&lt;String, ArrayList&lt;Barista&gt;
--
+ find(username: String, password: String)
+ findAll(cafeteria_brand): List&lt;Barista&gt; {q}
+ exists(username: String): boolean {query}
+ save(barista: Barista) 
+ delete(barista: Barista) 
+ updateBarista(old_username: String,
 new_username: String) 
+ updatecafeteria(old_brand: String, 
 new_brand: String) 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>468</x><y>174</y><w>1230</w><h>366</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;590;20;20;2030;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1842</x><y>192</y><w>114</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;20;170;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1302</x><y>576</y><w>990</w><h>1398</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;10;1570;10;1580;2300;240;2310;240;2150</additional_attributes></element><element><id>Relation</id><coordinates><x>1398</x><y>660</y><w>1062</w><h>1464</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>810;10;1710;10;1700;2400;10;2420;10;2010</additional_attributes></element><element><id>Relation</id><coordinates><x>870</x><y>1614</y><w>954</w><h>366</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>1570;10;1570;530;10;540;10;590</additional_attributes></element><element><id>UMLClass</id><coordinates><x>912</x><y>24</y><w>210</w><h>96</h></coordinates><panel_attributes>Interface
TableDAO
--
+ find(id: String)
findAll(cafeteria_brand: String): List&lt;Table&gt; {query}
+ exists(unique_id: String): boolean {query}
+ save(table: Table) 
+ delete(table: Table) 
+ updateTable(old_id: String, new_id: String) 
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1200</x><y>0</y><w>210</w><h>114</h></coordinates><panel_attributes>TableDAOMemory
--
+ tables: List&lt;Table&gt; 
+ unique_id_to_table: HashMap&lt;String, Table&gt; 
+ cafeteria_to_tables: HashMAp&lt; String, ArrayList&lt;Table&gt;&gt;
--
+ find(id: String)
findAll(cafeteria_brand: String): List&lt;Table&gt; {query}
+ exists(unique_id: String): boolean {query}
+ save(table: Table) 
+ delete(table: Table) 
+ updateTable(old_id: String, new_id: String) 
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1116</x><y>54</y><w>96</w><h>24</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;20;140;20</additional_attributes></element><element><id>Relation</id><coordinates><x>414</x><y>84</y><w>510</w><h>456</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;740;20;20;830;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1098</x><y>114</y><w>744</w><h>498</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>1220;810;1220;320;10;320;10;10</additional_attributes></element></diagram>