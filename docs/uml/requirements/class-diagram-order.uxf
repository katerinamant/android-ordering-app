<diagram program="umletino" version="15.1"><zoom_level>4</zoom_level><help_text>Space for diagram notesriD ge</help_text><element><id>UMLClass</id><coordinates><x>632</x><y>456</y><w>96</w><h>148</h></coordinates><panel_attributes>ScanTable Activity 
--
- presenter: ScanTablePresenter 
- relativeLayout: RelativeLayout
- idField: EditText 
- submitButton: Button 
- submit_button_enabled: boolean 
- unique_id: boolean 
- show_status_popup: PopupWindow
- order_cancelled_popup: PopupWindow
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View)
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)
+ showOrderStatus(orderStatus: Status) 
+ exitStatusPopup()
+ showCancelNotice()
+ exitCancelPopupOnNo()
+ successfulSubmit(unique_id: String) 
+ showError(title: String, msg: String) 
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>844</x><y>404</y><w>96</w><h>160</h></coordinates><panel_attributes>ViewCategories Activity 
--
- viewModel: ViewCategoriesViewModel 
- brand: String
- category: String 
- unique_id: String
- relativeLayout: RelativeLayout
- add_to_cart_popup: PopupWIndow
- selected_product: Product 
- chooseQuantityField: EditText
- commentsField: EditText
- confirmAddToCartButton: Button 
- confirm_enabled: boolean 
- quantity: String
- comments: String 
--
+ onCreate(savedInstanceState: Bundle) 
+ successfulAddToCart()
+ showError(titlle: String, msg: String) 
+ showToast(msg: String)
+ addProductToCart(p: Product)
+ onClick(v: View)
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>644</x><y>644</y><w>84</w><h>56</h></coordinates><panel_attributes>VIewMenuActivity
--
- view: VIewMenuViewModel
- String: unique_id 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ onRestart()
+ onViewingCart()
+ viewCategory(c: ProductCategory) 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>848</x><y>580</y><w>84</w><h>164</h></coordinates><panel_attributes>VIewCart Activity
--
- viewModel: ViewCartViewModel
- unique_id: String 
- relativeLayout: RelativeLayout
- selected_order_info: OrderInfo
- edit_cart_popup: PopupWindow
- prev_comments: String
- prev_quantity: int 
- editQuantityField: EditText
- editCommentsField: editText
- confirm_edit_enabled: boolean 
- text_changed: boolean 
- newQuantity: String 
- newComments: String 
--
+ onCreate(savedInstanceState: Bundle) 
+ onClick(v: View) 
+ onSuccessfulSubmitOrder()
+ successfulEdit()
+ showError(title: String, msg: String) 
+ showToast(msg: String) 
+ editOrderInfo(orderInfo: OrderInfo)
+ beforeTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ onTextChanged(s: CharSequence.
 start: int, count: int, after: int)
+ afterTextChanged(s: Editable)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>508</x><y>444</y><w>84</w><h>88</h></coordinates><panel_attributes>ScanTable Presenter 
--
- view: ScanTableView
- tables: TableDAO
- orders: ActiveOrdersDAO
- carts: ActiveCartsDAO 
--
+ ScanTablePresenter(view: ScanTableView, 
tables: TablesDAO, orders: ActiveOrders
DAO,  carts: ActiveCartsDAO) 
+ onSubmit(submit_button_enabled: boolean,
 unique_id: String) 
+ onOkStatus()
+ onYesOrder(unique_id: String) 
+ onNoOrder(unique_id: String) 

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>640</x><y>356</y><w>84</w><h>76</h></coordinates><panel_attributes>Interface
ScanTable View 
--
+ showOrderStatus(orderStatus: Status) 
+ exitStatusPopup()
+ showCancelNotice()
+ exitCancelPopupOnYes()
+ exitCancelPopupOnNo()
+ successfulSubmit(unique_id: String)
+ showError(title: String, msg: String) 
+ showToast(msg: String) 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>512</x><y>644</y><w>84</w><h>28</h></coordinates><panel_attributes>Interface 
ViewMenuView
--
+ onViewingCart()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>492</x><y>708</y><w>96</w><h>104</h></coordinates><panel_attributes>VIewMenu Presenter
--
- view: ViewMenuView
- menuDAO: MenuDAO 
- tableDAO: TableDAO 
- table: Table
- categoryResults: List&lt;ProductCategory&gt;
--
+ setMenuDAO(menuDAO: MenuDAO) 
+ getMenuDAO(): MenuDAO {query} 
+ setTableDAO(tableDAO: TableDAO) 
+ getTableDAO(): TableDAO {query} 
+ setView(view: ViewMenuView, 
 unique_id: String) 
+ findAllCategories(brand: String) 
+ getCategoryResults(): List
 &lt;ProductCategory&gt; {query} 
+ onViewCart()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>640</x><y>732</y><w>100</w><h>40</h></coordinates><panel_attributes>ViewMenuViewModel
--
- presenter: ViewMenuPresenter
--
+ ViewMenuViewModel()
+ getPresenter(): ViewMenuPresenter {q}
+ onCleared()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>584</x><y>740</y><w>64</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
is used in 
</panel_attributes><additional_attributes>140;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>680</x><y>696</y><w>32</w><h>44</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
is used in 
</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>592</x><y>652</y><w>60</w><h>16</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>Relation</id><coordinates><x>672</x><y>428</y><w>40</w><h>36</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>588</x><y>472</y><w>52</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
is used in</panel_attributes><additional_attributes>110;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>724</x><y>512</y><w>48</w><h>156</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to </panel_attributes><additional_attributes>10;370;50;370;50;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>724</x><y>684</y><w>132</w><h>16</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to (through view cart)</panel_attributes><additional_attributes>310;20;10;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>980</x><y>608</y><w>84</w><h>44</h></coordinates><panel_attributes>Interface 
ViewCart View 
--
+ onSuccessfulSubmitOrder()
+ successfulEdit()
+ showError(title: String, msg: String)
+ showToast(msg: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>964</x><y>716</y><w>116</w><h>124</h></coordinates><panel_attributes>ViewCart Presenter 
--
- view: ViewCartView
- activeOrdersDAO: ActiveOrdersDAO
- activeCartsDAO: ActiveCartsDAO
- cart: Order
--
+ setActiveOrdersDAO(activeOrdersDAO: 
ActiveOrdersDAO) 
+ getActiveOrdersDAO(): ActiveCartsDAO {q}
+ setActiveCartsDAO(activeCartsDAO:
 ActiveCartsDAO)
+ getActiveCartsDAO: ActiveCartsDAO {query}
+ setView(view: ViewCartView, unique_id: String) 
+ getTotalCost()
+ getOrderResults(): List&lt;OrderInfo&gt; {query} 
+ onSubmitOrder()
+ onEditOrderInfo(order_info: OrderInfo, 
 confirm_edit_enabled: boolean, text_changed: 
 boolean, prev_quantity: int, prev_comments: 
String, quantity_string: String, comments: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>828</x><y>776</y><w>92</w><h>40</h></coordinates><panel_attributes>ViewCart ViewModel
--
- presenter: ViewCartPresenter
--
+ ViewCartModel()
+ getPresenter(): ViewCartPresenter {q}
+ onCleaed()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>916</x><y>788</y><w>56</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
is used in 
</panel_attributes><additional_attributes>10;20;120;20</additional_attributes></element><element><id>Relation</id><coordinates><x>880</x><y>740</y><w>32</w><h>44</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
is used in 
</panel_attributes><additional_attributes>10;10;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>928</x><y>628</y><w>60</w><h>16</h></coordinates><panel_attributes>lt=.&gt;&gt;
implements</panel_attributes><additional_attributes>10;20;130;20</additional_attributes></element><element><id>Relation</id><coordinates><x>728</x><y>512</y><w>124</w><h>172</h></coordinates><panel_attributes>lt=&lt;&lt;-
leads to (through view categories)</panel_attributes><additional_attributes>290;10;100;10;100;410;10;410</additional_attributes></element><element><id>UMLClass</id><coordinates><x>976</x><y>492</y><w>116</w><h>40</h></coordinates><panel_attributes>ViewCategories ViewModel
--
- presenter: ViewCategoriesPresenter
--
+ ViewCategoriesViewModel()
+ getPresenter(): ViewCategoryPresenter {query}
+ onCleared()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1016</x><y>276</y><w>104</w><h>176</h></coordinates><panel_attributes>ViewCategories Presenter
--
- view: ViewCategoriesView
- menuDAO: MenuDAO
- cafeteriaDAO: CafeteriaDAO
- activeCartsDAO: ActiveCartsDAO
- cafe_brand: String 
- category: ProductCategory
- cafe: Cafeteria 
- order: Order
- productResults: List&lt;Product&gt; 
--
+ setMenuDAO(menuDAO: MenuDAO) 
+ getMenuDAO(): MenuDAO {query} 
+ setCafeteriaDAO(cafeteriaDAO: 
 CafeteriaDAO)
+ getCafeteriaDAO(): CafeteriaDAO {q}
+ setActiveCartsDAO( activeCartsDAO: 
 ActiveCartsDAO)
+ getActiveCartsDAO(): ActiveCartsDAO {q}
+ setView(view: ViewCategoriesView, 
 category_name: String, cafe_brand: 
 String, unique_id: String) 
+ getCategoryName(): String {query} 
+ getCategoryDesc(): String {query}  
+ findAllAvailableProducts()
+ getProductResults(): List&lt;Product&gt; {q} 
+ onConfirmAddToCart( product: Product, 
 confirm_enabled: boolean, quantity_string: 
String, comments: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>896</x><y>296</y><w>84</w><h>40</h></coordinates><panel_attributes>Interface 
ViewCategories View 
--
+ successfulAddToCart()
+ showError(title: String, msg: String) 
+ showToast(msg: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>744</x><y>284</y><w>128</w><h>68</h></coordinates><panel_attributes>OrderProduct RecyclerView
--
- mValues: List&lt;Product&gt; 
- listener: ItemSelectionListener
--
+ OrderProductRecyclerViewAdapter(items: List&lt;
Product&gt;,  listener: ItemSelectionListener) 
+ onCreateViewHolder(parent: VIewGroup, 
 viewType: int): ViewHolder {query}
+ onBindViewHolder(holder: ViewHolder, position: int)
+ onClick(v: View) 
+ getItemCount(): int {query} 
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>912</x><y>332</y><w>64</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>70;10;70;140;10;140;10;180</additional_attributes></element><element><id>Relation</id><coordinates><x>804</x><y>348</y><w>72</w><h>64</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements </panel_attributes><additional_attributes>10;10;10;100;160;100;160;140</additional_attributes></element><element><id>Relation</id><coordinates><x>1028</x><y>448</y><w>56</w><h>52</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
is used in </panel_attributes><additional_attributes>10;110;10;60;110;60;110;10</additional_attributes></element><element><id>Relation</id><coordinates><x>936</x><y>504</y><w>52</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
is used in </panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>572</x><y>404</y><w>76</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
                is used in</panel_attributes><additional_attributes>20;100;20;20;170;20</additional_attributes></element><element><id>Relation</id><coordinates><x>976</x><y>304</y><w>48</w><h>20</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
 is used in</panel_attributes><additional_attributes>100;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1020</x><y>648</y><w>32</w><h>76</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
 is used in</panel_attributes><additional_attributes>10;170;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>544</x><y>668</y><w>32</w><h>48</h></coordinates><panel_attributes>lt=&lt;&lt;.
m1=1 
m2=1
 is used in</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1132</x><y>164</y><w>84</w><h>56</h></coordinates><panel_attributes>Interface 
ActiveCartsDAO
--
+ find(cafeteria_brand: String, 
table_number: int): Order {query}
+ findInCafeteria(cafeteria_brand: String,
 table_number: int): Order {query} 
+ save(order: Order) 
+ delete(order: Order)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1228</x><y>216</y><w>100</w><h>64</h></coordinates><panel_attributes>ActiveCartsDAOMemory
--
- carts: List&lt;Order&gt; 
- table_to_cart: HashMap&lt;String, Order&gt;
--
+ find(cafeteria_brand: String, 
table_number: int): Order {query}
+ findInCafeteria(cafeteria_brand: String,
 table_number: int): Order {query} 
+ save(order: Order) 
+ delete(order: Order)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1212</x><y>168</y><w>76</w><h>56</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;20;170;20;170;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1116</x><y>216</y><w>64</w><h>84</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;190;90;190;90;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1076</x><y>216</y><w>152</w><h>540</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;1330;310;1330;310;10</additional_attributes></element><element><id>Relation</id><coordinates><x>524</x><y>204</y><w>616</w><h>248</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in </panel_attributes><additional_attributes>10;600;10;20;1520;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>164</x><y>872</y><w>136</w><h>100</h></coordinates><panel_attributes>ActiveOrdersDAOMemory
--
- orders: List&lt;Order&gt; 
- table_to_order: HashMap&lt;String, Order&gt;
- cafeteria_to_orders: HashMap&lt;String, ArrayList&lt;Order&gt;&gt;
- temp_cancelled_orders: List&lt;Order&gt; 
--
+ find(unique_id: String) 
+ findInCafeteria(cafeteria_brand: String,
 table_number: int) 
+ findAll(cafeteria_brand): List&lt;Order&gt; {query}
+ save(order: Order) 
+ cancel(order: Order) 
+ delete(order: Order) 
+ deleteCancelled(order: Order) 
+ updateCafeteria(old_brand: String, 
 new_brand: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>364</x><y>892</y><w>108</w><h>80</h></coordinates><panel_attributes>Interface 
ActiveOrdersDAO
--
+ find(unique_id: String) 
+ findInCafeteria(cafeteria_brand: String,
 table_number: int) 
+ findAll(cafeteria_brand): List&lt;Order&gt; {query}
+ save(order: Order) 
+ cancel(order: Order) 
+ delete(order: Order) 
+ deleteCancelled(order: Order) 
+ updateCafeteria(old_brand: String, 
 new_brand: String) </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>296</x><y>944</y><w>76</w><h>12</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>170;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>444</x><y>516</y><w>72</w><h>384</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>160;10;20;10;10;940</additional_attributes></element><element><id>Relation</id><coordinates><x>468</x><y>836</y><w>516</w><h>72</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>1270;10;1270;160;10;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>240</x><y>424</y><w>140</w><h>64</h></coordinates><panel_attributes>Interface
TableDAO
--
+ find(id: String)
findAll(cafeteria_brand: String): List&lt;Table&gt; {query}
+ exists(unique_id: String): boolean {query}
+ save(table: Table) 
+ delete(table: Table) 
+ updateTable(old_id: String, new_id: String) 
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>160</x><y>528</y><w>140</w><h>76</h></coordinates><panel_attributes>TableDAOMemory
--
+ tables: List&lt;Table&gt; 
+ unique_id_to_table: HashMap&lt;String, Table&gt; 
+ cafeteria_to_tables: HashMAp&lt; String, ArrayList&lt;Table&gt;&gt;
--
+ find(id: String)
findAll(cafeteria_brand: String): List&lt;Table&gt; {query}
+ exists(unique_id: String): boolean {query}
+ save(table: Table) 
+ delete(table: Table) 
+ updateTable(old_id: String, new_id: String) 
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>260</x><y>484</y><w>40</w><h>52</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>376</x><y>452</y><w>140</w><h>16</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>330;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>348</x><y>484</y><w>152</w><h>244</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>360;590;10;590;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1188</x><y>832</y><w>40</w><h>52</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>Relation</id><coordinates><x>1104</x><y>448</y><w>48</w><h>360</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>10;10;20;880;100;880</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1144</x><y>780</y><w>88</w><h>56</h></coordinates><panel_attributes>Interface
CafeteriaDAO
--
+ find(brand: String)
+ exists(brand: String) 
+ save(cafe:Cafeteria)
+ delete(cafe: Cafeteria)
+ updateCafeteria(old_brand: String,
 new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1172</x><y>880</y><w>112</w><h>76</h></coordinates><panel_attributes>CafeteriaDAOMemory
--
- cafes: List&lt;Cafeteria&gt;
- brand_to_cafe:&lt;HashMap&lt;String, Cafeteria&gt;
--
+ find(brand: String)
+ exists(brand: String) 
+ save(cafe:Cafeteria)
+ delete(cafe: Cafeteria)
+ updateCafeteria(old_brand: String,
 new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>100</y><w>136</w><h>120</h></coordinates><panel_attributes>Interface 
MenuDAO
--
+ productExists(cafeteria_brand: String,
 product_name)
+ saveProduct(product: Product)
+ deleteProduct(product: Product)
+findProduct(cafeteria_brand: String, 
product_name: String)
+ findAllProducts(cafeteria_brand:String, 
 category: ProductCategory)
+ categoryExists(cafeteria_brand: String, 
 category_name: String)  
+ saveCategory(category: ProductCategory)
+ deleteCategory(category: ProductCategory) 
+ findCategory(cafeteria_brand: String, 
category_name: String) 
+findAllCategories(cafeteria_brand): 
 List&lt;ProductCategory&gt; {query}
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>160</x><y>68</y><w>136</w><h>140</h></coordinates><panel_attributes>MenuDAOMemory
--
_cafeteria_to_products: 
HashMap&lt;String, ArrayList&lt;products&gt;&gt;
- cafetria_to_categories:
 Hashmap&lt;String, ArrayList&lt;ProductCategory&gt;&gt;
--
+ productExists(cafeteria_brand: String,
 product_name)
+ saveProduct(product: Product)
+ deleteProduct(product: Product)
+findProduct(cafeteria_brand: String, 
product_name: String)
+ findAllProducts(cafeteria_brand:String, 
 category: ProductCategory)
+ categoryExists(cafeteria_brand: String, 
 category_name: String)  
+ saveCategory(category: ProductCategory)
+ deleteCategory(category: ProductCategory) 
+ findCategory(cafeteria_brand: String, 
category_name: String) 
+findAllCategories(cafeteria_brand): 
 List&lt;ProductCategory&gt; {query}
+ updateCafeteria(old_brand: String, new_brand: String)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>292</x><y>116</y><w>76</w><h>16</h></coordinates><panel_attributes>lt=&lt;&lt;.
implements</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>392</x><y>216</y><w>108</w><h>576</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>250;1420;10;1420;20;10</additional_attributes></element><element><id>Relation</id><coordinates><x>456</x><y>216</y><w>584</w><h>68</h></coordinates><panel_attributes>lt=&lt;&lt;-
is used in</panel_attributes><additional_attributes>1440;150;1440;100;10;110;10;10</additional_attributes></element></diagram>